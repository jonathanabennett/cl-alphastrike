;;;; cl-alphastrike.lisp

(in-package #:cl-alphastrike)

(defun display-record-sheet (element)
  "This takes an `element' object as defined in record-sheet.lisp and formats it for display using ltk."
  (let ((name     (make-instance 'label :text (name element)))
        (pv       (make-instance 'label :text (pv element)))
        (kind     (make-instance 'label :text (kind element)))
        (size     (make-instance 'label :text (size element)))
        (tmm      (make-instance 'label :text (tmm element)))
        (move     (make-instance 'label :text (format nil "~A~A" (mv element) (mv-type element))))
        (role     (make-instance 'label :text (role element)))
        (pilot    (make-instance 'label :text (display (pilot element))))
        (damages  (make-instance 'label :text (format nil "~A" (damages element))))
        (ov       (make-instance 'label :text (overheat element)))
        (heat     (make-instance 'label :text (heat element)))
        (armor    (make-instance 'label :text (format nil "~A/~A" (current-armor element) (armor element))))
        (struct   (make-instance 'label :text (format nil "~A/~A" (current-struct element) (struct element))))
        (specials (make-instance 'label :text (format nil "~A" (specials element))))
        (crits    (make-instance 'label :text (format nil "~A" (crits element)))))
    (progn (grid name 0 0)
           (grid pv 0 1)
           (grid kind 1 0)
           (grid size 1 1)
           (grid tmm 1 2)
           (grid move 1 3)
           (grid role 2 0)
           (grid pilot 2 2)
           (grid damages 3 0)
           (grid ov 4 0)
           (grid heat 4 1)
           (grid armor 5 0)
           (grid struct 6 0)
           (grid specials 7 0)
           (grid crits 8 0))))

(defun main (mek)
  "Main loop. Currently just display the record sheet."
  (with-ltk ()
    (display-record-sheet mek)))
